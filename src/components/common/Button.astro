---
interface Props {
  label: string;
  link: string;
  external?: boolean;
  light?: boolean;
  class?: string;
}

const {
  label,
  link,
  external = false,
  light = false,
  class: className,
} = Astro.props;
---

<a
  href={link || "#"}
  {...external && { target: "_blank", rel: "noopener noreferrer" }}
  class:list={[
    "flex items-center gap-1.5 rounded-sm hover:shadow-sm",
    {
      "border-[3px] border-mediumPurple bg-white px-4 py-1.5 font-bold text-mediumPurple hover:bg-lightButtonHover active:bg-lightButtonPressed":
        light,
    },
    {
      "border-s-mediumPurple bg-mediumPurple px-4 py-3 text-white selection:text-mainPurple hover:bg-buttonHover active:bg-buttonPressed lg:py-1.5":
        !light,
    },
    className,
  ]}
  >{label}
  {
    external && (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        class:list={[
          "buttonsvg",
          { "text-mediumPurple": light },
          { "text-white": !light },
        ]}
      >
        <path
          d="M6.33333 15.2222L4.77778 13.6667L9.55556 8.88889H5.55556V6.66667H13.3333V14.4444H11.1111V10.4444L6.33333 15.2222ZM17.7778 10V2.22222H10V0H20V10H17.7778ZM2.22222 20C1.61111 20 1.08796 19.7824 0.652778 19.3472C0.217593 18.912 0 18.3889 0 17.7778V0H2.22222V17.7778H20V20H2.22222Z"
          fill="currentColor"
        />
      </svg>
    )
  }
</a>

<style>
  .buttonsvg {
    height: 1em;
    margin-left: 8px;
  }
</style>
