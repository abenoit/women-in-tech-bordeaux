---
import { Image } from "astro:assets";

type Recommendation = {
  title: string;
  author: string;
  thumbnail: string;
  recommendedBy: {
    name: string;
    picture: string;
  };
  consultLink?: { link: string; platform: string } | undefined;
};

interface Props {
  recommendation: Recommendation | undefined;
}

const { recommendation } = Astro.props;

if (!recommendation) {
  return null;
}

// Import all speaker images with proper typing
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/recommendations/**/*.{jpeg,jpg,png,webp}",
);

const recoImagePath = `/src/assets/recommendations/${recommendation.thumbnail}`;
const recoImageModule = images[recoImagePath];

const recommenderImagePath = `/src/assets/recommendations/recommenders/${recommendation.recommendedBy.picture}`;
const recommenderImageModule = images[recommenderImagePath];

let coverImage, recommenderImage;

try {
  if (recoImageModule) {
    const importedImage = await recoImageModule();
    coverImage = importedImage.default;
  }

  if (recommenderImageModule) {
    const importedImage = await recommenderImageModule();
    recommenderImage = importedImage.default;
  }
} catch (error) {
  console.error(`Error loading image for ${recommendation.thumbnail}:`, error);
}
---

<>
  <div class="flex flex-col items-center gap-2">
    {
      coverImage && (
        <Image
          src={coverImage}
          alt={`couverture du livre ${recommendation.title}`}
          class="h-[170px] object-contain"
        />
      )
    }
    <div>
      <h4 class="text-sm font-semibold">{recommendation.title}</h4>
      <p class="text-gray-600 text-mmd mt-1">{recommendation.author}</p>
      <div
        class="text-mmd my-2 flex flex-row items-center gap-1 rounded-full bg-subtlePurple pr-3"
      >
        {
          recommenderImage && (
            <Image
              src={recommenderImage}
              alt={`photo de ${recommendation.recommendedBy.name}`}
              class="h-5.5 w-5.5 rounded-full border-2 border-subtlePurple object-cover"
            />
          )
        }
        Recommand√© par {recommendation.recommendedBy.name}
      </div>
      {
        recommendation.consultLink && (
          <a
            href={recommendation.consultLink.link}
            class="text-linkPurple underline"
          >
            {recommendation.consultLink.verb} l'article
          </a>
        )
      }
    </div>
  </div>
</>
