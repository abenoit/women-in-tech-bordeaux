---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

// Import all speaker images with proper typing
const speakerImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/speakers/*.{jpeg,jpg,png,webp}",
);

interface Props {
  talks: CollectionEntry<"events">["data"]["talks"];
}

const { talks } = Astro.props;
if (!talks || !Array.isArray(talks)) {
  return null;
}
---

<div class="flex flex-col gap-4">
  {
    talks.map((talk) => (
      <div>
        {talk.speakers.map(async (speaker) => {
          const imagePath = `/src/assets/speakers/${speaker.picture}`;
          const imageModule = speakerImages[imagePath];
          let speakerImage;

          try {
            if (imageModule) {
              const importedImage = await imageModule();
              speakerImage = importedImage.default;
            }
          } catch (error) {
            console.error(`Error loading image for ${speaker.name}:`, error);
          }

          return (
            <div class="mt-3 flex items-center gap-1">
              {speakerImage && (
                <Image
                  alt={`Photo de ${speaker.name}`}
                  src={speakerImage}
                  width={50}
                  height={50}
                  loading="eager"
                  decoding="async"
                  quality="max"
                  class="rounded-full object-cover"
                />
              )}
              <div class="flex flex-col">
                <h4 class="text-sm font-bold">«{talk.title}»</h4>
                <a
                  href={speaker.link}
                  class="hover:text-linkPurpleHover font-semibold text-linkPurple underline"
                >
                  {speaker.name}
                </a>
              </div>
            </div>
          );
        })}
      </div>
    ))
  }
</div>
